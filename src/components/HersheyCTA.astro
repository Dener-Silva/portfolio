---
import "../styles/hershey-cta.css";

const asciiCharacters = [];
for (let i = 33; i < 65; i++) {
    asciiCharacters.push(String.fromCharCode(i));
}
for (let i = 91; i < 97; i++) {
    asciiCharacters.push(String.fromCharCode(i));
}
const sample = `You can edit this text.
The quick brown fox jumps over the lazy dog
${asciiCharacters.join("")}`;

const fontFamilies = [
    "Hershey Gothic English Triplex",
    "Hershey Greek Complex",
    "Hershey Roman Complex",
    "Hershey Roman Duplex",
    "Hershey Script Complex",
    "Hershey Script Simplex",
    "Hershey Symbols",
];
---

<script>
    const cta = document.getElementById("cta");
    if (!cta || !cta.firstElementChild) {
        throw new Error("Hershey-TTF card not found");
    }
    const modal = document.getElementById("modal");
    if (!modal || !modal.firstElementChild) {
        throw new Error("Modal not found");
    }
    const x = modal.querySelector(".x") as HTMLElement;
    const slot = cta.firstElementChild as HTMLElement;

    // Close and open events
    slot.onclick = () => {
        modal.style.display = "flex";
        modal.style.animation = "fade-in 500ms forwards";
        document.body.style.overflow = "hidden";
        sample.value = sample.placeholder;
    };
    const closeModal = () => {
        modal.style.animation = "fade-out 500ms forwards";
        document.body.style.removeProperty("overflow");
    };
    modal.onclick = closeModal;
    x.onclick = closeModal;
    modal.addEventListener("animationend", (e) => {
        if (e.animationName === "fade-out") {
            modal.style.display = "none";
        }
    });

    // Avoid closing modal if clicking on the content
    const content = modal.firstElementChild as HTMLElement;
    content.onclick = (e) => e.stopPropagation();

    // Interactible elements
    const sample = document.getElementById(
        "modal-text-sample"
    ) as HTMLTextAreaElement;
    const font = document.getElementById("font") as HTMLSelectElement;
    const size = document.getElementById("size") as HTMLInputElement;

    // Hack for Firefox because it persists the input state across
    // page loads
    font.value = "Hershey Roman Complex";
    size.value = "24";

    size.onchange = () => {
        const value = size.valueAsNumber;
        if (value < 12) {
            size.value = "12";
        } else if (value > 120) {
            size.value = "120";
        }
        sample.style.fontSize = `${size.value}pt`;
    };
    font.onchange = () => {
        sample.style.fontFamily = `${font.value}, Adobe NotDef`;
    };
</script>
<div id="cta" tabindex="0">
    <slot />
</div>
<div id="modal">
    <div class="modal-content">
        <div class="modal-text">
            <button class="x modal-x" title="Close">
                <img
                    src=`${import.meta.env.BASE_URL}x.svg`
                    width="15px"
                    height="15px"
                    alt="Close"
                />
            </button>
            <p>
                The Hershey vector fonts were originally created in the 60s.
                They are described as a set of vector coordinates, which I
                converted to TTF using a Python script.
            </p>
            <p>
                You can check out the GitHub repo <a
                    href="https://github.com/Dener-Silva/Hershey-TTF"
                    target="_blank">here</a
                >.
            </p>
            <p>This is a sample of the fonts.</p>
        </div>
        <div class="modal-controls">
            <div>
                <label for="font">Font</label>
                <select id="font">
                    {
                        fontFamilies.map((fontFamily: string) => {
                            return (
                                <option value={fontFamily}>{fontFamily}</option>
                            );
                        })
                    }
                </select>
            </div>
            <div>
                <label for="size">Size</label>
                <input id="size" type="number" min="12" max="120" step="1" />
            </div>
        </div>
        <textarea id="modal-text-sample" placeholder={sample}></textarea>
    </div>
</div>
